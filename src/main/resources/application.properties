spring.application.name=tech-news-java-api


server.port=8082
#this is the same idea as in JS/TS

spring.datasource.url=jdbc:mysql://localhost:3306/just_tech_news_java_db?useSSL=false&serverTimezone=UTC&createDatabaseIfNotExist=true&allowPublicKeyRetrieval=true
#the above is called the connecting string - we define the jdbc as mysql then provide a parameter for the MYSQL connection.
#Since we'll be testing locally, we pass in the local host and the name of the database.
#the parameters: useSSL is set to false, the time zone is set to UTC and most importantly if it doesn't exist, we want to create a database, like in classic SQL

spring.datasource.username=root
spring.datasource.password=${DB_PASSWORD}
spring.jpa.hibernate.ddl-auto=update
#The above is like what we would have in a dotenv file in JS/TS
#how the schema tools will manipulate the database.

spring.jpa.show-sql=true
#JPA will show the SQL statements
spring.jpa.properties.hibernate.format_sql=true
#make these statements more readable
